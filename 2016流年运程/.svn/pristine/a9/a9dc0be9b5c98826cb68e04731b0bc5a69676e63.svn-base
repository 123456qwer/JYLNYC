//
//  LiunianJPViewController.m
//  LiuNianYunCheng
//
//  Created by 吴冬 on 15/7/30.
//  Copyright (c) 2015年 玄机天地. All rights reserved.
//

#import "LiunianJPViewController.h"
#import "LiuNianView.h"
#import "LiuNianSliderView.h"
#import "CountScrollView.h"
#import "ViewForCountG.h"
#import "AFNetworking.h"

#define kWidthForSliderView 60.0                          //边栏按钮的宽度
#define kYforSliderView 50                                //边栏的Y

#define kCountViewWidth (kScreenWidth - 60 - 15 * 3) / 2  //灰色View的宽度
#define kXforCountView 30                                 //灰色View的X在变的时候
#define kYforCountView 60                                 //灰色View的Y


#define widthForSliderView 101 / 750.0 * kScreenWidth
#define yForSliderView 128 / 1334.0 * kScreenHeight
#define heightForSliderView 180 / 1334.0 * kScreenHeight


#define widthForBtn 223 / 750.0 * kScreenWidth
#define heightForBtn 88 / 1334.0 * kScreenHeight
#define yFotBtn (128 / 2.0 - 88 / 2.0) / 1334.0 * kScreenHeight

//俩个宫视图的frame
#define heightForGongView 502 / 1334.0 * kScreenHeight

@interface LiunianJPViewController ()
{
    UIImageView *bgImageView;
    
    LiuNianView *countViewForLiunian;
    
    LiuNianSliderView *liunianSlider;
    
    ViewForCountG *_viewForG;
    
    CountScrollView *bgScrollView;
    
    CGFloat  _xForCountView;
    CGFloat  _yForScrollView;
    
    UILabel *_labelForCountText;
    
    BOOL _isBack;
}
@end

@implementation LiunianJPViewController

- (void)viewDidLoad {
    [super viewDidLoad];

    
    bgImageView = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, kScreenWidth, kScreenHeight)];
    bgImageView.image = [UIImage imageNamed:@"背景主页"];
    [self.view addSubview:bgImageView];
    
    //中间的内容视图
    _labelForCountText = [[UILabel alloc]initWithFrame:CGRectZero];
    [self.view addSubview:_labelForCountText];
    
    //请求网络获取数据
    [self requestAction];

    //手势方法
    /*
    UISwipeGestureRecognizer *oneFingerSwipeleft =
    
    [[UISwipeGestureRecognizer alloc] initWithTarget:self action:@selector(oneFingerSwipeUp:)];
    
    [oneFingerSwipeleft setDirection:UISwipeGestureRecognizerDirectionLeft];
    
    [self.view addGestureRecognizer:oneFingerSwipeleft];
    
    UISwipeGestureRecognizer *oneFingerSwipeRight = [[UISwipeGestureRecognizer alloc] initWithTarget:self action:@selector(oneFingerSwiperight:)];
    [oneFingerSwipeRight setDirection:UISwipeGestureRecognizerDirectionRight];
    
    [self.view addGestureRecognizer:oneFingerSwipeRight];
    */
}

/**
 *  请求网络的方法
 */
- (void)requestAction
{
//    NSString *strForZiwei = self.arrForZM[0];
//    NSString *strForMinggong = self.arrForZM[1];
//    NSLog(@"紫薇在%@",self.arrForZM[0]);
//    NSLog(@"命宫在%@",self.arrForZM[1]);
    
   // NSString *strForURL = [NSString stringWithFormat:@"http://xuanji.jyhd.com/year2016/queryPan?ziWei=%@&mingGong=%@&fortuneNum=1",strForZiwei,strForMinggong];
    
    NSString *str=[NSString stringWithFormat:@"http://xuanji.jyhd.com/year2016/queryPan?ziWei=紫&mingGong=命&fortuneNum=1"];
    NSURL *url = [NSURL URLWithString:[str stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding]];
    NSURLRequest *request = [NSURLRequest requestWithURL:url];
    //    从URL获取json数据
    AFHTTPRequestOperation *operation = [[AFHTTPRequestOperation alloc]initWithRequest:request];
    
    
    [operation setCompletionBlockWithSuccess:^(AFHTTPRequestOperation *operation, id responseObject) {
        
        NSString *html = operation.responseString;
        NSData* data=[html dataUsingEncoding:NSUTF8StringEncoding];
        id dict=[NSJSONSerialization  JSONObjectWithData:data options:0 error:nil];
       // NSLog(@"获取到的数据为：%@",dict);
        
        NSDictionary *dic = dict;
        
        NSString *str = dic[@"advice"];
        
        NSArray *arrForG = dic[@"gong"];
        
        
        for (int i = 0; i < arrForG.count; i++) {
            
            NSDictionary *dicForG = arrForG[i];
            
            NSArray *arrForConunt = [dicForG objectForKey:dicForG.allKeys[0]];
            
            NSDictionary *dicForCount1 = arrForConunt[0];
            
            NSLog(@"建议：%@",str);
            NSLog(@"宫：%@",dicForG.allKeys[0]);
            NSLog(@"宫%d标题：%@",i,dicForCount1.allKeys[0]);
            NSLog(@"宫%d内容：%@",i,[dicForCount1 objectForKey:dicForCount1.allKeys[0]]);
            


        }
 
        
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        
        NSLog(@"请求失败");

        
    }];
    
    [self createViewAction];

    
    NSOperationQueue *queue = [[NSOperationQueue alloc] init];
    [queue addOperation:operation];
    
   
 
}

/**
 *  创建UI
 */
- (void)createViewAction
{
    //背景可以滚动的视图
    bgScrollView = [[CountScrollView alloc]initWithFrame:CGRectMake(0, kYforCountView, kScreenWidth + kWidthForSliderView , kScreenHeight - kYforCountView )];
    bgScrollView.contentSize = CGSizeMake(kScreenWidth + kWidthForSliderView + 1, kScreenHeight * 2);
    bgScrollView.contentOffset = CGPointMake(1, 0);
    bgScrollView.backgroundColor = [UIColor clearColor];
    bgScrollView.delegate = self;
    bgScrollView.bounces = NO;
    [self.view addSubview:bgScrollView];
    
    
    //装载俩个宫视图的View
    countViewForLiunian = [[LiuNianView alloc]initWithFrame:CGRectMake(0, 0, kScreenWidth - widthForSliderView, heightForGongView) andAllGongAndStar:_dicForAllStarandG andArrForZM:_arrForZM];
    countViewForLiunian.backgroundColor = [UIColor clearColor];
    [bgScrollView addSubview:countViewForLiunian];
    
    //宫的解释内容视图
    _viewForG = [[ViewForCountG alloc]initWithFrame:CGRectMake(0, countViewForLiunian.bottom + 5, kScreenWidth, kScreenHeight)];
    countViewForLiunian.liunianDelegate = _viewForG; //侧栏传给宫内容视图的代理
    _viewForG.delegateForCount = self;   //宫内容视图传给控制器
    [bgScrollView addSubview:_viewForG];
    
    
    
    //侧栏按钮的创建
    NSArray *arr = @[@"综合运势",@"感情运势",@"事业运势",@"财运运势",@"健康运势",@"家庭运势",@"人际运势"];
    liunianSlider = [[LiuNianSliderView alloc]initWithFrame:CGRectMake(kScreenWidth - widthForSliderView, yForSliderView , widthForSliderView, kScreenHeight - yForSliderView) andCountForGong:nil andSanfangsizheng:nil andBtnArr:arr andHeight:heightForSliderView];
    liunianSlider.sliderDelegate = countViewForLiunian;
    [self.view addSubview:liunianSlider];

    //顶头的label
    UILabel *labelFor = [[UILabel alloc]initWithFrame:CGRectMake(0, 0, kScreenWidth, yForSliderView)];
    labelFor.text = @"流年分析";
    labelFor.backgroundColor = colorForAll;
    labelFor.textColor = [UIColor whiteColor];
    labelFor.font = [UIFont boldSystemFontOfSize:21];
    labelFor.textAlignment = NSTextAlignmentCenter;
    [self.view addSubview:labelFor];
    
    UIButton *btnForBack = [UIButton buttonWithType:UIButtonTypeCustom];
    [btnForBack setImage:[UIImage imageNamed:@"返回按钮"] forState:UIControlStateNormal];
    [btnForBack addTarget:self action:@selector(backAction:) forControlEvents:UIControlEventTouchUpInside];
    btnForBack.frame = CGRectMake(0, yFotBtn, widthForBtn, heightForBtn);
    [self.view addSubview:btnForBack];
    
    UIButton *btnForShare = [UIButton buttonWithType:UIButtonTypeCustom];
    [btnForShare setImage:[UIImage imageNamed:@"分享按钮"] forState:UIControlStateNormal];
    [btnForShare addTarget:self action:@selector(shareAction:) forControlEvents:UIControlEventTouchUpInside];
    btnForShare.frame = CGRectMake(kScreenWidth - widthForBtn, yFotBtn, widthForBtn, heightForBtn);
    [self.view addSubview:btnForShare];

    
}

/**
 *  分享方法
 */
- (void)shareAction:(UIButton *)sender
{
    
    NSLog(@"分享");

}

/**
 *  返回方法
 */
- (void)backAction:(UIButton *)sender
{
    [self.navigationController popViewControllerAnimated:YES];


}

#pragma mark - 侧栏代理方法
//请求侧边栏的方法
- (void)returnLabelCount:(NSInteger)number
{

    NSString *strForZiwei = self.arrForZM[0];
    NSString *strForMinggong = self.arrForZM[1];
    NSLog(@"紫薇在%@",self.arrForZM[0]);
    NSLog(@"命宫在%@",self.arrForZM[1]);
    
     NSString *str = [NSString stringWithFormat:@"http://xuanji.jyhd.com/year2016/queryPan?ziWei=%@&mingGong=%@&fortuneNum=%ld",strForZiwei,strForMinggong,number];
    
    
    NSURL *url = [NSURL URLWithString:[str stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding]];
    NSURLRequest *request = [NSURLRequest requestWithURL:url];
    //    从URL获取json数据
    AFHTTPRequestOperation *operation = [[AFHTTPRequestOperation alloc]initWithRequest:request];
    
    
    [operation setCompletionBlockWithSuccess:^(AFHTTPRequestOperation *operation, id responseObject) {
        
        NSString *html = operation.responseString;
        NSData* data=[html dataUsingEncoding:NSUTF8StringEncoding];
        id dict=[NSJSONSerialization  JSONObjectWithData:data options:0 error:nil];
        // NSLog(@"获取到的数据为：%@",dict);
        
        NSDictionary *dic = dict;
        
        NSString *str = dic[@"advice"];
        
        NSArray *arrForG = dic[@"gong"];
        
        
        for (int i = 0; i < arrForG.count; i++) {
            
            NSDictionary *dicForG = arrForG[i];
            
            NSArray *arrForConunt = [dicForG objectForKey:dicForG.allKeys[0]];
            
            NSDictionary *dicForCount1 = arrForConunt[0];
            
            NSLog(@"建议：%@",str);
            NSLog(@"宫：%@",dicForG.allKeys[0]);
            NSLog(@"宫%d标题：%@",i,dicForCount1.allKeys[0]);
            NSLog(@"宫%d内容：%@",i,[dicForCount1 objectForKey:dicForCount1.allKeys[0]]);
            
            
            
        }
        
        
        
        
        
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        
        NSLog(@"请求失败");
        
    }];
    
    NSOperationQueue *queue = [[NSOperationQueue alloc] init];
    [queue addOperation:operation];
    
    
    

}

#pragma mark - ScrollView代理方法
//减速的时候调用
- (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate
{
  
   // scrollView.directionalLockEnabled = YES;


}

//开始滚动的时候调用
- (void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    
    NSLog(@"初始值：x = %lf",scrollView.contentOffset.x);
    NSLog(@"初始值:y = %lf",scrollView.contentOffset.y);
    
    //当ScrollView滑动的时候不接受操作
    scrollView.directionalLockEnabled = YES;


    
    if (scrollView.contentOffset.x == 0 ) {
        
        [self isBack:YES];

    }else{
    

        [self isBack:NO];
   
    }
    
   
}

/**
 *  移动中间内容和隐藏边栏的方法
 */
- (void)isBack:(BOOL )isBackNow
{
   
    if (isBackNow) {
        
        [UIView animateWithDuration:0.2 animations:^{
            
            liunianSlider.origin = CGPointMake(kScreenWidth, yForSliderView);
            countViewForLiunian.origin = CGPointMake((kScreenWidth - (kScreenWidth - widthForSliderView)) / 2.0, countViewForLiunian.origin.y);
            _viewForG.origin = CGPointMake(kXforCountView, _viewForG.origin.y);
        } completion:^(BOOL finished) {
            ;
        }];
        
    }else{
    
        [UIView animateWithDuration:0.2 animations:^{
            
            
            liunianSlider.origin = CGPointMake(kScreenWidth - widthForSliderView, yForSliderView);
            countViewForLiunian.origin = CGPointMake(0, countViewForLiunian.origin.y);
            _viewForG.origin = CGPointMake(0, _viewForG.origin.y);
            
        } completion:^(BOOL finished) {
            ;
        }];
    
    }

}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
